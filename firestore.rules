rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isModerator() {
      return request.auth.token.role == 'moderator';
    }

    function isStaff() {
      return isAdmin() || isModerator();
    }

    function isBanned() {
      return request.auth.token.isBanned == true;
    }

    function isNotBanned() {
      return !('isBanned' in request.auth.token) || request.auth.token.isBanned == false;
    }

    // USERS
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                     (request.auth.uid == userId || isAdmin());
    }

    // TEAMS
    match /teams/{teamId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() &&
                    (isAdmin() || isModerator() ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryRole == 'fundador');
      allow update: if isAuthenticated() &&
                    (request.auth.uid == resource.data.ownerId || isStaff());
      allow delete: if isAuthenticated() &&
                    (request.auth.uid == resource.data.ownerId || isAdmin());
    }

    // TEAM APPLICATIONS
    match /teamApplications/{applicationId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAuthenticated() &&
          (request.auth.uid == resource.data.userId || 
           request.auth.uid == resource.data.teamOwnerId || 
           isStaff());
    }

    // FRIEND REQUESTS
    match /friendRequests/{requestId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isAuthenticated() &&
          (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
    }


    // CHATS
    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.members;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.members;
      allow update, delete: if request.auth != null && request.auth.uid in resource.data.members;

      match /messages/{messageId} {
        allow read: if request.auth != null &&
                    request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow create: if request.auth != null &&
                      request.auth.uid == request.resource.data.senderId &&
                      request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
      }
    }

    // TOURNAMENTS
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow create: if isAuthenticated() && isNotBanned();
      allow update, delete: if isStaff() || request.auth.uid == resource.data.creatorId;
    }

    // SUPPORT TICKETS
    match /supportTickets/{ticketId} {
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if isStaff();
    }

    // DEFAULT
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
