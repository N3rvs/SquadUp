rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    // USERS
    // Anyone can see user profiles, but a user can only edit their own.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // TEAMS & TOURNAMENTS
    // Anyone can see teams and tournaments.
    // Creating is allowed from the client, but updates/deletes are protected by functions.
    match /teams/{teamId} {
      allow read, create: if isAuthenticated();
    }
    match /tournaments/{tournamentId} {
      allow read, create: if isAuthenticated();
    }

    // APPLICATIONS & REQUESTS
    // These are mostly managed by Cloud Functions.
    // We allow create from the client for applications, and reads for notifications.
    match /teamApplications/{appId} {
      allow read, create: if isAuthenticated();
    }
    match /friendRequests/{reqId} {
      allow read: if isAuthenticated(); // Writes are handled by functions
    }

    // CHATS
    // As requested, chats are open to authenticated users.
    // For more security, you could restrict this to members only.
    match /chats/{chatId} {
      allow read, write: if isAuthenticated();
      match /messages/{messageId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // SUPPORT TICKETS
    // Users can create their own tickets. Admins will read them via functions.
    match /supportTickets/{ticketId} {
        allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
  }
}